/* Generated By:JJTree: Do not edit this line. ASTDefinition.java */

package support.translate.parser;

@SuppressWarnings("all")
public class ASTDefinition extends SimpleNode {
	private String key;
	private String entry; 
	public void setKey(Token t)
	{
		key = t.image.intern();
	}
	public void setEntry(Token t)
	{
		entry = t == null ? "" : t.image.intern();
	}
	
	public String getKey()
	{
		if(key==null || key.length()<2)
			return "";
		return key.substring(0, key.length()-1).trim();
	}
	
	public String getEntry()
	{
		if(entry == null || entry.length() == 0)
			return null;
		return entry.trim();
	}
	
  public ASTDefinition(int id) {
    super(id);
  }

  public ASTDefinition(Translator p, int id) {
    super(p, id);
  }
  
@Override
public boolean equals(Object obj) {
	if (obj instanceof ASTDefinition)
	{
		if(((ASTDefinition) obj).key.equalsIgnoreCase(key))
		{
			return true;
		}
	}
	return false;
}
@Override
public String toString() {
	return super.toString() + " " + key + ":" + entry;
}

@Override
public NodeType getNodeType() {
	return NodeType.Definition;
}

}
